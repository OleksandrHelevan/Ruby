#!/usr/env ruby
class Student
  @@students = []
  attr_accessor :name
  attr_accessor :surname
  attr_writer :day_of_birth
  attr_writer :month_of_birth
  attr_writer :year_birth
  attr_reader :date_of_birth

  def initialize(name, surname, day_of_birth, month_of_birth, year_birth)
    @name = name
    @surname = surname
    @day_of_birth = day_of_birth
    @month_of_birth = month_of_birth
    @year_birth = year_birth
    raise ArgumentError, "Wrong date of birth" unless (correct_date?)
    @date_of_birth = "#{day_of_birth}-#{month_of_birth}-#{year_birth}"
    add_student
  end
  def self.all_students
   @@students
  end

  def correct_date?()
   return false if @year_birth > Time.now.year
   return false if @month_of_birth > 12 || @month_of_birth < 1
   return false if @day_of_birth > 31 || @day_of_birth < 1
   return false if @year_birth == Time.now.year && @month_of_birth > Time.now.month
   return false if @year_birth == Time.now.year && @month_of_birth == Time.now.month && @day_of_birth > Time.now.day
    true
  end

  def student_duplicate?()
    @@students.any? do |student|
      student.name == @name && student.surname == @surname && student.date_of_birth == @date_of_birth
    end
  end

  def calculate_age()
    year = Time.now.year - @year_birth
    if @month_of_birth > Time.now.month
      year -= 1
    end
    if @month_of_birth == Time.now.month && @day_of_birth > Time.now.day
     year -=1
    end
    year
  end

  def add_student()
    raise ArgumentError, "Duplicate student" if (student_duplicate?)
    @@students << self
  end

  def remove_student()
    @@students.delete(self)
  end

  def self.get_students_by_age(age)
   @@students.select { |student| student.calculate_age == age }
  end

  def self.get_students_by_name(name)
   @@students.select { |student| student.name == name }
  end


end

s1 = Student.new("Oleksandr", "Helevan", 15, 03, 2006)
# s_dup = Student.new("Oleksandr", "Helevan", 15, 03, 2006)

Student.new("Volodymyr", "Dobryanskiy", 20, 12, 2005)
Student.new("Volodymyr", "Savtenko", 23, 01, 2006)
Student.new("Anton", "Olianyuk",15, 03, 2006)
Student.new("Vlad", "Ostrovskiy", 24, 01, 2005)
Student.new("Volodymyr", "Zanlovskiy", 23, 04, 2006)
Student.new("Vasya", "Rusnak", 25, 10, 2006)



puts "--------------------------"
Student.get_students_by_age(18).each { |student| puts"#{student.name} #{student.surname} - #{student.calculate_age} years" }
puts "--------------------------"
Student.get_students_by_name("Volodymyr").each { |student| puts"#{student.name} #{student.surname}" }
puts "--------------------------"
Student.all_students.each_with_index { |student, index| puts"#{index+1}. #{student.name} #{student.surname}" }
s1.remove_student
puts "--------------------------"
Student.all_students.each_with_index { |student, index| puts"#{index+1}. #{student.name} #{student.surname}" }
